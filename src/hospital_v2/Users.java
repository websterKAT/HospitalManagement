/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital_v2;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author lakshan
 */
public class Users extends javax.swing.JFrame {
    Connection conn = new DBConnection().connect();  
    public String userName1;
    /**
     * Creates new form Users
     */
    public Users() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbPosition = new javax.swing.JPanel();
        cmdNew = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtRetype = new javax.swing.JPasswordField();
        cmdUpdate = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmbPos = new javax.swing.JComboBox<>();
        cmdOK = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cmbPosition.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "xxxxxxxxxxxxxxxxxxx", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 1, 12))); // NOI18N

        cmdNew.setText("New User");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        jLabel1.setText("User Name:");

        jLabel2.setText("Password:");

        jLabel3.setText("Retype Password:");

        cmdUpdate.setText("Update Password");
        cmdUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateActionPerformed(evt);
            }
        });

        cmdDelete.setText("Delete User");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        cmbPos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMINISTRATOR", "RECEPTIONIST", "DOCTOR", "NURSE", "LAB TECHNICIAN" }));

        cmdOK.setText("OK");
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });

        cmdCancel.setText("CANCEL");
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cmbPositionLayout = new javax.swing.GroupLayout(cmbPosition);
        cmbPosition.setLayout(cmbPositionLayout);
        cmbPositionLayout.setHorizontalGroup(
            cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmbPositionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cmbPositionLayout.createSequentialGroup()
                        .addComponent(cmdNew)
                        .addGap(27, 27, 27)
                        .addComponent(cmdUpdate)
                        .addGap(26, 26, 26)
                        .addComponent(cmdDelete))
                    .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(cmbPositionLayout.createSequentialGroup()
                            .addComponent(cmdOK, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(cmdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(cmbPositionLayout.createSequentialGroup()
                            .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(28, 28, 28)
                            .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUserName)
                                .addComponent(txtPassword)
                                .addComponent(txtRetype, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        cmbPositionLayout.setVerticalGroup(
            cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmbPositionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdNew)
                    .addComponent(cmdUpdate)
                    .addComponent(cmdDelete))
                .addGap(32, 32, 32)
                .addComponent(cmbPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRetype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(cmbPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdOK)
                    .addComponent(cmdCancel))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateActionPerformed
        myClear();
        cmdNew.setEnabled(false);
        cmdUpdate.setEnabled(true);
        cmdDelete.setEnabled(false);
        userName1 = JOptionPane.showInputDialog("Please Enter the User Name ID:");
        searchUser(userName1);
    }//GEN-LAST:event_cmdUpdateActionPerformed

    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        myClear();
        cmdUpdate.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdNew.setEnabled(true);
    }//GEN-LAST:event_cmdNewActionPerformed

    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        cmdNew.setEnabled(false);
        cmdUpdate.setEnabled(false);
        cmdDelete.setEnabled(true);
        myClear();
        userName1 = JOptionPane.showInputDialog("Please Enter the user Name:");
        searchUser(userName1);
    }//GEN-LAST:event_cmdDeleteActionPerformed

    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        if(cmdNew.isEnabled()){
            insertUser();
            
        }
        else if(cmdUpdate.isEnabled()){
            updatePassword(userName1);
        }
        else if(cmdDelete.isEnabled()){
            deleteUser(userName1);
        }
    }//GEN-LAST:event_cmdOKActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        cmdNew.setEnabled(true);
        cmdUpdate.setEnabled(true);
        cmdDelete.setEnabled(true);
        myClear();
    }//GEN-LAST:event_cmdCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Users().setVisible(true);
            }
        });
    }

    private void myClear(){
        txtUserName.setText("");
        txtPassword.setText("");
        txtRetype.setText("");
    }
    private boolean preCheck(){
        return(txtUserName.getText().equals("")|| txtPassword.getText().equals("" ) || txtRetype.getText().equals(""));
    }
    
    private boolean authenticate(){
        if(txtPassword.getText().equals(txtRetype.getText())){
            return true;
        }
        else{
            return false;
        }
    }
    
    private void insertUser(){
        String sqlQuary = "INSERT INTO login (userName,password,pos) VALUES (?,?,?)";
        if(preCheck()) {
            JOptionPane.showMessageDialog(null,"please enter all data field");
        }
        else if(!authenticate()){
            JOptionPane.showMessageDialog(null,"Passwords are not matching");
        }
        else{
            try{
                PreparedStatement ps = conn.prepareStatement(sqlQuary);
                ps.setString(1, txtUserName.getText());
                ps.setString(2,txtPassword.getText());
                String position = (String) cmbPos.getSelectedItem();
                ps.setString(3,position);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"Data Inserted Sucessfully");
                myClear();
            }  
            catch(HeadlessException | SQLException e){
                JOptionPane.showMessageDialog(null,"problem "+e);
                myClear();
               
            }

        }
    }
    
    private void updatePassword(String user){
        String sqlQuary;
        sqlQuary = "UPDATE login SET password=?,pos=? Where userName='"+user+"'";
        if(preCheck()){
            JOptionPane.showMessageDialog(null,"please enter all data field");
        }
        else if(!authenticate()){
            JOptionPane.showMessageDialog(null,"Passwords are not matching");
        }
        else{
            try{
                PreparedStatement ps = conn.prepareStatement(sqlQuary);
                ps.setString(1,txtPassword.getText());
                String position = (String) cmbPos.getSelectedItem();
                ps.setString(2,position);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"Data Edited Sucessfully");
                myClear();
            }
            catch(HeadlessException | SQLException e){
                JOptionPane.showMessageDialog(null,"problem"+e);
                myClear();
            }
        }
    }
    
    private void deleteUser(String user){
        String sqlQuary;
        sqlQuary = "DELETE FROM login Where userName ='"+user+"'";
        try{
            PreparedStatement ps = conn.prepareStatement(sqlQuary);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null,"Record Deleted Sucessfully");
            myClear();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,"problem"+e);
            myClear();
        }
        
    }
    private void searchUser(String user) {
        try{
           String sqlQuary ="Select * from login where userName='"+user+"'";
           PreparedStatement ps = conn.prepareStatement(sqlQuary);
           ResultSet rs = ps.executeQuery();
           if(rs.next()){
               String uName = rs.getString("userName");
               txtUserName.setText(uName);
               String pass = rs.getString("password");
               txtPassword.setText(pass);
               String pos = rs.getString("pos");
               cmbPos.setSelectedItem(pos);
            }
        }
        catch(SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbPos;
    private javax.swing.JPanel cmbPosition;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdOK;
    private javax.swing.JButton cmdUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtRetype;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
